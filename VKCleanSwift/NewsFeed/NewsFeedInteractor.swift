//
//  NewsFeedInteractor.swift
//  VKCleanSwift
//
//  Created by Sergey Koriukin on 03/09/2019.
//  Copyright (c) 2019 Sergey Koriukin. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol NewsFeedBusinessLogic {
    func makeRequest(request: NewsFeed.Model.Request.RequestType)
}

class NewsFeedInteractor: NewsFeedBusinessLogic {
    
    var presenter: NewsFeedPresentationLogic?
    var service: NewsFeedService?
    
    private var revalePostId = [Int]()
    private var feedResponce: FeedResponse?
    
    private var fetcher: DataFetcher = NetworkDataFetcher(networking: NetworkServise())
    
    
    func makeRequest(request: NewsFeed.Model.Request.RequestType) {
        if service == nil {
            service = NewsFeedService()
        }
        switch request {

        case .getFeed:
            print(".getFeed Interactor")
          
       
        case .getNewsFeed:
            fetcher.getFeed { [weak self] (feedResponse) in
                self?.feedResponce = feedResponse
                self?.presentFeed()
            }
        case .revalPostIds(let postId):
                revalePostId.append(postId)
                presentFeed()
        }
    }
    private func presentFeed() {
        guard let feedRespounce = feedResponce else { return }
        presenter?.presentData(response: NewsFeed.Model.Response.ResponseType.presentNewsFeed(feed: feedRespounce, revalePostId: revalePostId))
    }
}
